# Execute using:
# tesla_dashcam <Location of video files> --output <Location to store encoded video files> @FULLSCREEN.txt

# Skip if encoded file already exist.
# --skip_existing

# Delete processed files when video file is encoded.
# --delete_source

# FULLSCREEN Layout
--layout FULLSCREEN

# Put clip info in upper left
--halign LEFT --valign TOP

# Output reason for save, city, and rolling timestamp (each on new line)
--text_overlay_fmt >
{{ 'Saved Reason:  ' ~ event_reason ~ '\n' if event_reason != '' }}
{{ 'City: ' ~ event_city ~ '\n' if event_city != '' }}
Date/Time: {{local_timestamp_rolling}}

# Fast forward through portions where there is no motion detected
--motion_only

# Encode with x265
--encoding x265

# Output
# Store files in folders, extention is set thus hence group events based on end_timestamp (date/hour), event reason, event city
--output "./Movies/{{layout}}/{{end_timestamp|timestamp_format('%Y-%m-%dT%H')}} - {{event_reason}} - {{event_city}}.mp4"

# Keep the events and store them within subfolders based on the same name as the merged movie
--output_event "./Movies/{{layout}}/{{end_timestamp|timestamp_format('%Y-%m-%dT%H')}} - {{event_reason}} - {{event_city}}"

# Temp folder
--temp_dir "./temp"

# Create map
--title_screen_map